    #set app name for log and consul url
    upstream {{.AppName}} {
        #consistent_hash $request_uri;

        #fake server otherwise ngx_http_upstream will report error when startup
        server 127.0.0.1:80 weight=10 max_fails=1 fail_timeout=10s;

        #all backend server will pull from consul when startup and will delete fake server
        upsync {{.ConsulIp}}/v1/kv/upstreams/{{.AppName}} upsync_timeout=6m upsync_interval=500ms upsync_type=consul strong_dependency=off;
        upsync_dump_path /opt/work/nginx/conf/servers/{{.AppName}}.conf;

        keepalive 2000;
        check interval=3000 rise=2 fall=5 timeout=3000 type=tcp;
        check_http_expect_alive http_2xx http_3xx;
    }

{{$appname := .AppName}}
{{range $server := .Servers}}
    server {
        listen       {{$server.Port}};
        server_name  {{$server.VirtualIp}};

        location ~ ^/lvs/lvs.php {
           root /opt/work/nginx;
           access_log off;
        }

        location / {
            root   html;
            index  index.html index.htm;
             proxy_store off;
             proxy_redirect  off;
             proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504 http_404;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header X-Real-IP $remote_addr;
             proxy_set_header Range $http_range;
             proxy_http_version 1.1;
             proxy_pass http://{{$appname}};
             proxy_set_header Connection "";
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        access_log /opt/log/nginx/access/{{$appname}}-access.log main;
        error_log /opt/log/nginx/error/error.log crit;
    }
{{end}}
